<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.38.0 (20140413.2041)
 -->
<!-- Title: GraphFor__Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport Pages: 1 -->
<svg width="100%" height="100%" viewBox="0.00 0.00 4394.00 690.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/**
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the
 * first g-element), including the library into any SVG adds the following
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.2, Tue Aug 30 17:21:56 CEST 2011, Andrea Leofreddi
 *	- Fixed viewBox on root tag (#7)
 *	- Improved zoom speed (#2)
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2017 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.5; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION

var root = document.documentElement;

var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg"
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script>

<g id="viewport" transform="scale(0.5,0.5) translate(0,0)">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(144 546)">
<title>GraphFor__Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport</title>
<polygon fill="white" stroke="none" points="-144,144 -144,-546 4250,-546 4250,144 -144,144"/>
<text text-anchor="middle" x="2053" y="-7.8" font-family="Times New Roman,serif" font-size="14.00">Function \Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport dependencies</text>
<g id="clust1" class="cluster"><title>cluster__Symfony_Component_Security_Core_Encoder_EncoderFactoryInterface</title>
<polygon fill="none" stroke="#b2ac9f" points="8,-31 8,-106 424,-106 424,-31 8,-31"/>
<text text-anchor="middle" x="216" y="-90.8" font-family="Times New Roman,serif" font-size="14.00" fill="#b2ac9f">\Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface</text>
</g>
<g id="clust2" class="cluster"><title>cluster__Symfony_Component_Security_Core_User_UserInterface</title>
<polygon fill="none" stroke="#b2ac9f" points="432,-31 432,-106 763,-106 763,-31 432,-31"/>
<text text-anchor="middle" x="597.5" y="-90.8" font-family="Times New Roman,serif" font-size="14.00" fill="#b2ac9f">\Symfony\Component\Security\Core\User\UserInterface</text>
</g>
<g id="clust3" class="cluster"><title>cluster__Symfony_Component_Security_Core_Encoder_PasswordEncoderInterface</title>
<polygon fill="none" stroke="#b2ac9f" points="771,-31 771,-106 1199,-106 1199,-31 771,-31"/>
<text text-anchor="middle" x="985" y="-90.8" font-family="Times New Roman,serif" font-size="14.00" fill="#b2ac9f">\Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface</text>
</g>
<g id="clust4" class="cluster"><title>cluster__Symfony_Component_Security_Http_Authenticator_Passport_Credentials_CustomCredentials</title>
<polygon fill="none" stroke="#b2ac9f" points="1207,-31 1207,-106 1734,-106 1734,-31 1207,-31"/>
<text text-anchor="middle" x="1470.5" y="-90.8" font-family="Times New Roman,serif" font-size="14.00" fill="#b2ac9f">\Symfony\Component\Security\Http\Authenticator\Passport\Credentials\CustomCredentials</text>
</g>
<g id="clust5" class="cluster"><title>cluster__Symfony_Component_Security_Http_Authenticator_Passport_UserPassportInterface</title>
<polygon fill="none" stroke="#b2ac9f" points="1742,-31 1742,-106 2221,-106 2221,-31 1742,-31"/>
<text text-anchor="middle" x="1981.5" y="-90.8" font-family="Times New Roman,serif" font-size="14.00" fill="#b2ac9f">\Symfony\Component\Security\Http\Authenticator\Passport\UserPassportInterface</text>
</g>
<g id="clust6" class="cluster"><title>cluster__Symfony_Component_Security_Http_Authenticator_Passport_Badge_BadgeInterface</title>
<polygon fill="none" stroke="#b2ac9f" points="2229,-31 2229,-106 2707,-106 2707,-31 2229,-31"/>
<text text-anchor="middle" x="2468" y="-90.8" font-family="Times New Roman,serif" font-size="14.00" fill="#b2ac9f">\Symfony\Component\Security\Http\Authenticator\Passport\Badge\BadgeInterface</text>
</g>
<g id="clust7" class="cluster"><title>cluster__Symfony_Component_Security_Http_Authenticator_Passport_Credentials_PasswordCredentials</title>
<polygon fill="none" stroke="#b2ac9f" points="2715,-31 2715,-106 3254,-106 3254,-31 2715,-31"/>
<text text-anchor="middle" x="2984.5" y="-90.8" font-family="Times New Roman,serif" font-size="14.00" fill="#b2ac9f">\Symfony\Component\Security\Http\Authenticator\Passport\Credentials\PasswordCredentials</text>
</g>
<g id="clust8" class="cluster"><title>cluster__Symfony_Component_Security_Http_Event_CheckPassportEvent</title>
<polygon fill="none" stroke="#b2ac9f" points="3262,-31 3262,-106 3637,-106 3637,-31 3262,-31"/>
<text text-anchor="middle" x="3449.5" y="-90.8" font-family="Times New Roman,serif" font-size="14.00" fill="#b2ac9f">\Symfony\Component\Security\Http\Event\CheckPassportEvent</text>
</g>
<g id="clust9" class="cluster"><title>cluster__Symfony_Component_Security_Http_Authenticator_Passport_PassportInterface</title>
<polygon fill="none" stroke="#b2ac9f" points="3645,-31 3645,-106 4098,-106 4098,-31 3645,-31"/>
<text text-anchor="middle" x="3871.5" y="-90.8" font-family="Times New Roman,serif" font-size="14.00" fill="#b2ac9f">\Symfony\Component\Security\Http\Authenticator\Passport\PassportInterface</text>
</g>
<g id="clust10" class="cluster"><title>cluster__Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest</title>
<polygon fill="none" stroke="#b2ac9f" points="1899,-319 1899,-394 2517,-394 2517,-319 1899,-319"/>
<text text-anchor="middle" x="2208" y="-378.8" font-family="Times New Roman,serif" font-size="14.00" fill="#b2ac9f">\Symfony\Component\Security\Http\Tests\EventListener\CheckCredentialsListenerTest</text>
</g>
<g id="clust11" class="cluster"><title>cluster__Symfony_Component_Security_Http_EventListener_CheckCredentialsListener</title>
<polygon fill="none" stroke="#b2ac9f" points="2006,-175 2006,-250 2451,-250 2451,-175 2006,-175"/>
<text text-anchor="middle" x="2228.5" y="-234.8" font-family="Times New Roman,serif" font-size="14.00" fill="#b2ac9f">\Symfony\Component\Security\Http\EventListener\CheckCredentialsListener</text>
</g>
<!-- _Symfony_Component_Security_Core_Encoder_EncoderFactoryInterface__getEncoder -->
<g id="node1" class="node"><title>_Symfony_Component_Security_Core_Encoder_EncoderFactoryInterface__getEncoder</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="416,-75 348,-75 348,-39 416,-39 416,-75"/>
<text text-anchor="middle" x="382" y="-53.9" font-family="Times New Roman,serif" font-size="12.00">getEncoder</text>
</g>
<!-- _Symfony_Component_Security_Core_User_UserInterface__getSalt -->
<g id="node2" class="node"><title>_Symfony_Component_Security_Core_User_UserInterface__getSalt</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="755,-75 701,-75 701,-39 755,-39 755,-75"/>
<text text-anchor="middle" x="728" y="-53.9" font-family="Times New Roman,serif" font-size="12.00">getSalt</text>
</g>
<!-- _Symfony_Component_Security_Core_User_UserInterface__getPassword -->
<g id="node3" class="node"><title>_Symfony_Component_Security_Core_User_UserInterface__getPassword</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="682.5,-75 607.5,-75 607.5,-39 682.5,-39 682.5,-75"/>
<text text-anchor="middle" x="645" y="-53.9" font-family="Times New Roman,serif" font-size="12.00">getPassword</text>
</g>
<!-- _Symfony_Component_Security_Core_Encoder_PasswordEncoderInterface__isPasswordValid -->
<g id="node4" class="node"><title>_Symfony_Component_Security_Core_Encoder_PasswordEncoderInterface__isPasswordValid</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="1191,-75 1099,-75 1099,-39 1191,-39 1191,-75"/>
<text text-anchor="middle" x="1145" y="-53.9" font-family="Times New Roman,serif" font-size="12.00">isPasswordValid</text>
</g>
<!-- _Symfony_Component_Security_Http_Authenticator_Passport_Credentials_CustomCredentials__executeCustomChecker -->
<g id="node5" class="node"><title>_Symfony_Component_Security_Http_Authenticator_Passport_Credentials_CustomCredentials__executeCustomChecker</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="1725.5,-75 1600.5,-75 1600.5,-39 1725.5,-39 1725.5,-75"/>
<text text-anchor="middle" x="1663" y="-53.9" font-family="Times New Roman,serif" font-size="12.00">executeCustomChecker</text>
</g>
<!-- _Symfony_Component_Security_Http_Authenticator_Passport_UserPassportInterface__getUser -->
<g id="node6" class="node"><title>_Symfony_Component_Security_Http_Authenticator_Passport_UserPassportInterface__getUser</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="2213,-75 2159,-75 2159,-39 2213,-39 2213,-75"/>
<text text-anchor="middle" x="2186" y="-53.9" font-family="Times New Roman,serif" font-size="12.00">getUser</text>
</g>
<!-- _Symfony_Component_Security_Http_Authenticator_Passport_Badge_BadgeInterface__isResolved -->
<g id="node7" class="node"><title>_Symfony_Component_Security_Http_Authenticator_Passport_Badge_BadgeInterface__isResolved</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="2302.5,-75 2237.5,-75 2237.5,-39 2302.5,-39 2302.5,-75"/>
<text text-anchor="middle" x="2270" y="-53.9" font-family="Times New Roman,serif" font-size="12.00">isResolved</text>
</g>
<!-- _Symfony_Component_Security_Http_Authenticator_Passport_Credentials_PasswordCredentials__getPassword -->
<g id="node8" class="node"><title>_Symfony_Component_Security_Http_Authenticator_Passport_Credentials_PasswordCredentials__getPassword</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="2898.5,-75 2823.5,-75 2823.5,-39 2898.5,-39 2898.5,-75"/>
<text text-anchor="middle" x="2861" y="-53.9" font-family="Times New Roman,serif" font-size="12.00">getPassword</text>
</g>
<!-- _Symfony_Component_Security_Http_Authenticator_Passport_Credentials_PasswordCredentials__markResolved -->
<g id="node9" class="node"><title>_Symfony_Component_Security_Http_Authenticator_Passport_Credentials_PasswordCredentials__markResolved</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="2805,-75 2723,-75 2723,-39 2805,-39 2805,-75"/>
<text text-anchor="middle" x="2764" y="-53.9" font-family="Times New Roman,serif" font-size="12.00">markResolved</text>
</g>
<!-- _Symfony_Component_Security_Http_Event_CheckPassportEvent__getPassport -->
<g id="node10" class="node"><title>_Symfony_Component_Security_Http_Event_CheckPassportEvent__getPassport</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="3340,-75 3270,-75 3270,-39 3340,-39 3340,-75"/>
<text text-anchor="middle" x="3305" y="-53.9" font-family="Times New Roman,serif" font-size="12.00">getPassport</text>
</g>
<!-- _Symfony_Component_Security_Http_Authenticator_Passport_PassportInterface__hasBadge -->
<g id="node11" class="node"><title>_Symfony_Component_Security_Http_Authenticator_Passport_PassportInterface__hasBadge</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="3791.5,-75 3730.5,-75 3730.5,-39 3791.5,-39 3791.5,-75"/>
<text text-anchor="middle" x="3761" y="-53.9" font-family="Times New Roman,serif" font-size="12.00">hasBadge</text>
</g>
<!-- _Symfony_Component_Security_Http_Authenticator_Passport_PassportInterface__getBadge -->
<g id="node12" class="node"><title>_Symfony_Component_Security_Http_Authenticator_Passport_PassportInterface__getBadge</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="3712.5,-75 3653.5,-75 3653.5,-39 3712.5,-39 3712.5,-75"/>
<text text-anchor="middle" x="3683" y="-53.9" font-family="Times New Roman,serif" font-size="12.00">getBadge</text>
</g>
<!-- _Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testPasswordAuthenticated -->
<g id="node13" class="node"><title>_Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testPasswordAuthenticated</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="2509,-363 2369,-363 2369,-327 2509,-327 2509,-363"/>
<text text-anchor="middle" x="2439" y="-341.9" font-family="Times New Roman,serif" font-size="12.00">testPasswordAuthenticated</text>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport -->
<g id="node17" class="node"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport</title>
<polygon fill="#ede3dc" stroke="#b27540" points="2294.5,-219 2161.5,-219 2161.5,-183 2294.5,-183 2294.5,-219"/>
<text text-anchor="middle" x="2228" y="-196" font-family="Times New Roman,serif" font-size="20.00">checkPassport</text>
</g>
<!-- _Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testPasswordAuthenticated&#45;&gt;_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport -->
<g id="edge7" class="edge"><title>_Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testPasswordAuthenticated&#45;&gt;_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport</title>
<path fill="none" stroke="#b2ac9f" d="M2413.55,-326.871C2375.61,-301.338 2304.16,-253.253 2261.85,-224.781"/>
<polygon fill="#b2ac9f" stroke="#b2ac9f" points="2263.79,-221.869 2253.54,-219.189 2259.88,-227.676 2263.79,-221.869"/>
</g>
<!-- _Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testEmptyPassword -->
<g id="node14" class="node"><title>_Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testEmptyPassword</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="2350.5,-363 2243.5,-363 2243.5,-327 2350.5,-327 2350.5,-363"/>
<text text-anchor="middle" x="2297" y="-341.9" font-family="Times New Roman,serif" font-size="12.00">testEmptyPassword</text>
</g>
<!-- _Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testEmptyPassword&#45;&gt;_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport -->
<g id="edge6" class="edge"><title>_Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testEmptyPassword&#45;&gt;_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport</title>
<path fill="none" stroke="#b2ac9f" d="M2288.68,-326.871C2276.76,-302.35 2254.74,-257.032 2240.76,-228.259"/>
<polygon fill="#b2ac9f" stroke="#b2ac9f" points="2243.87,-226.654 2236.35,-219.189 2237.58,-229.713 2243.87,-226.654"/>
</g>
<!-- _Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testCustomAuthenticated -->
<g id="node15" class="node"><title>_Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testCustomAuthenticated</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="2225,-363 2095,-363 2095,-327 2225,-327 2225,-363"/>
<text text-anchor="middle" x="2160" y="-341.9" font-family="Times New Roman,serif" font-size="12.00">testCustomAuthenticated</text>
</g>
<!-- _Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testCustomAuthenticated&#45;&gt;_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport -->
<g id="edge16" class="edge"><title>_Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testCustomAuthenticated&#45;&gt;_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport</title>
<path fill="none" stroke="#b2ac9f" d="M2168.2,-326.871C2179.94,-302.35 2201.65,-257.032 2215.43,-228.259"/>
<polygon fill="#b2ac9f" stroke="#b2ac9f" points="2218.61,-229.72 2219.77,-219.189 2212.29,-226.697 2218.61,-229.72"/>
</g>
<!-- _Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testNoCredentialsBadgeProvided -->
<g id="node16" class="node"><title>_Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testNoCredentialsBadgeProvided</title>
<polygon fill="#edecea" stroke="#b2ac9f" points="2076.5,-363 1907.5,-363 1907.5,-327 2076.5,-327 2076.5,-363"/>
<text text-anchor="middle" x="1992" y="-341.9" font-family="Times New Roman,serif" font-size="12.00">testNoCredentialsBadgeProvided</text>
</g>
<!-- _Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testNoCredentialsBadgeProvided&#45;&gt;_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport -->
<g id="edge5" class="edge"><title>_Symfony_Component_Security_Http_Tests_EventListener_CheckCredentialsListenerTest__testNoCredentialsBadgeProvided&#45;&gt;_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport</title>
<path fill="none" stroke="#b2ac9f" d="M2020.47,-326.871C2063.08,-301.231 2143.49,-252.851 2190.73,-224.425"/>
<polygon fill="#b2ac9f" stroke="#b2ac9f" points="2192.67,-227.344 2199.43,-219.189 2189.06,-221.346 2192.67,-227.344"/>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Core_Encoder_EncoderFactoryInterface__getEncoder -->
<g id="edge15" class="edge"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Core_Encoder_EncoderFactoryInterface__getEncoder</title>
<path fill="none" stroke="#b28a60" d="M2161.48,-199.415C1855.1,-196.333 587.906,-179.225 428,-106 417.073,-100.996 407.425,-92.122 399.823,-83.3536"/>
<polygon fill="#b28a60" stroke="#b28a60" points="402.443,-81.0277 393.439,-75.4448 396.996,-85.4245 402.443,-81.0277"/>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Core_User_UserInterface__getSalt -->
<g id="edge4" class="edge"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Core_User_UserInterface__getSalt</title>
<path fill="none" stroke="#b28a60" d="M2161.45,-198.838C1892.2,-193.714 891.936,-170.467 767,-106 757.267,-100.978 749.099,-92.3377 742.794,-83.7598"/>
<polygon fill="#b28a60" stroke="#b28a60" points="745.61,-81.6767 737.12,-75.339 739.805,-85.588 745.61,-81.6767"/>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Core_User_UserInterface__getPassword -->
<g id="edge11" class="edge"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Core_User_UserInterface__getPassword</title>
<path fill="none" stroke="#b28a60" d="M2161.05,-198.727C1882.92,-193.055 826.87,-167.613 692,-106 680.954,-100.954 671.118,-92.0716 663.335,-83.3088"/>
<polygon fill="#b28a60" stroke="#b28a60" points="665.865,-80.8756 656.789,-75.4083 660.474,-85.3416 665.865,-80.8756"/>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Core_Encoder_PasswordEncoderInterface__isPasswordValid -->
<g id="edge13" class="edge"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Core_Encoder_PasswordEncoderInterface__isPasswordValid</title>
<path fill="none" stroke="#b28a60" d="M2161.34,-198.995C1962.66,-195.203 1377.58,-178.046 1203,-106 1190.03,-100.649 1177.75,-91.3499 1167.85,-82.3527"/>
<polygon fill="#b28a60" stroke="#b28a60" points="1170.1,-79.6637 1160.45,-75.283 1165.26,-84.7234 1170.1,-79.6637"/>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_Credentials_CustomCredentials__executeCustomChecker -->
<g id="edge9" class="edge"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_Credentials_CustomCredentials__executeCustomChecker</title>
<path fill="none" stroke="#b28a60" d="M2161.17,-195.226C2064.71,-186.569 1882.22,-163.509 1738,-106 1722.22,-99.706 1706.16,-89.9674 1692.97,-80.9026"/>
<polygon fill="#b28a60" stroke="#b28a60" points="1694.94,-78.0063 1684.75,-75.0861 1690.9,-83.7201 1694.94,-78.0063"/>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_UserPassportInterface__getUser -->
<g id="edge2" class="edge"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_UserPassportInterface__getUser</title>
<path fill="none" stroke="#b28a60" d="M2222.93,-182.871C2215.74,-158.564 2202.51,-113.819 2193.99,-85.0132"/>
<polygon fill="#b28a60" stroke="#b28a60" points="2197.28,-83.7859 2191.08,-75.1893 2190.56,-85.7713 2197.28,-83.7859"/>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_Badge_BadgeInterface__isResolved -->
<g id="edge8" class="edge"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_Badge_BadgeInterface__isResolved</title>
<path fill="none" stroke="#b28a60" d="M2233.07,-182.871C2240.26,-158.564 2253.49,-113.819 2262.01,-85.0132"/>
<polygon fill="#b28a60" stroke="#b28a60" points="2265.44,-85.7713 2264.92,-75.1893 2258.72,-83.7859 2265.44,-85.7713"/>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_Credentials_PasswordCredentials__getPassword -->
<g id="edge3" class="edge"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_Credentials_PasswordCredentials__getPassword</title>
<path fill="none" stroke="#b28a60" d="M2294.7,-194.577C2428.46,-182.853 2724.32,-152.404 2814,-106 2824.63,-100.501 2834.29,-91.7007 2842.04,-83.128"/>
<polygon fill="#b28a60" stroke="#b28a60" points="2844.79,-85.3028 2848.61,-75.4204 2839.46,-80.7639 2844.79,-85.3028"/>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_Credentials_PasswordCredentials__markResolved -->
<g id="edge12" class="edge"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_Credentials_PasswordCredentials__markResolved</title>
<path fill="none" stroke="#b28a60" d="M2294.88,-198.222C2391.58,-193.235 2573.88,-174.635 2711,-106 2722.51,-100.241 2733.38,-91.2781 2742.25,-82.6489"/>
<polygon fill="#b28a60" stroke="#b28a60" points="2745.01,-84.8374 2749.5,-75.2407 2740,-79.9431 2745.01,-84.8374"/>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Event_CheckPassportEvent__getPassport -->
<g id="edge14" class="edge"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Event_CheckPassportEvent__getPassport</title>
<path fill="none" stroke="#b28a60" d="M2294.65,-199.855C2494.63,-198.499 3086.38,-187.524 3258,-106 3268.97,-100.789 3278.79,-91.8764 3286.58,-83.1351"/>
<polygon fill="#b28a60" stroke="#b28a60" points="3289.43,-85.1885 3293.14,-75.2667 3284.05,-80.7056 3289.43,-85.1885"/>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_PassportInterface__hasBadge -->
<g id="edge1" class="edge"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_PassportInterface__hasBadge</title>
<path fill="none" stroke="#b28a60" d="M2294.65,-198.937C2567.91,-194.159 3593.99,-171.938 3722,-106 3731.74,-100.985 3739.91,-92.346 3746.21,-83.7673"/>
<polygon fill="#b28a60" stroke="#b28a60" points="3749.2,-85.5944 3751.88,-75.3451 3743.39,-81.6839 3749.2,-85.5944"/>
</g>
<!-- _Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_PassportInterface__getBadge -->
<g id="edge10" class="edge"><title>_Symfony_Component_Security_Http_EventListener_CheckCredentialsListener__checkPassport&#45;&gt;_Symfony_Component_Security_Http_Authenticator_Passport_PassportInterface__getBadge</title>
<path fill="none" stroke="#b28a60" d="M2294.52,-198.554C2557.93,-192.427 3519.44,-166.104 3641,-106 3651.23,-100.942 3660.03,-92.1766 3666.89,-83.5091"/>
<polygon fill="#b28a60" stroke="#b28a60" points="3669.78,-85.4895 3672.86,-75.3531 3664.13,-81.3546 3669.78,-85.4895"/>
</g>
</g>

</g>
</svg>
